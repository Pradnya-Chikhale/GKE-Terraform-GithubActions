name: Deploy to GKE

on:
  push:
    branches:
      - master

jobs:
  terraform:
    name: Set up GKE with Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Google Cloud Auth
      uses: google-github-actions/auth@v0.4.1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Initialize Terraform
      working-directory: ./Iac-Terraform
      run: terraform init

    - name: Apply Terraform
      working-directory: ./Iac-Terraform
      run: terraform apply -auto-approve

  build:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Google Cloud Container Registry
      uses: google-github-actions/auth@v0.4.1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure docker to use the gcloud command-line tool as a credential helper
      run: |
        gcloud --quiet auth configure-docker

    - name: Build and push Docker image
      run: |
        IMAGE_NAME=gcr.io/${{ secrets.GCP_PROJECT }}/my-python-app
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Kubernetes tools
      uses: azure/setup-kubectl@v1

    - name: Authenticate to GKE
      uses: google-github-actions/auth@v0.4.1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Get GKE credentials
      run: gcloud container clusters get-credentials my-gke-cluster --region us-central1 --project ${{ secrets.GCP_PROJECT }}

    - name: Deploy to GKE
      run: |
        kubectl apply -f k8s-deployment.yaml
